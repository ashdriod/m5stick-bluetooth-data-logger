name: Build & Package PySide6 App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    # macOS-specific dependencies
    - name: Install dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements-macos.txt

    # Linux & Windows dependencies
    - name: Install dependencies (Linux & Windows)
      if: matrix.os != 'macos-latest'
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements-common.txt

    # Build with PyInstaller
    - name: Build App
      run: |
        pyinstaller --noconfirm --onefile --windowed --name M5Logger app/main.py

    # Package macOS .dmg
    - name: Package for macOS
      if: matrix.os == 'macos-latest'
      run: |
        brew install create-dmg
        mkdir -p mac_package/M5Logger.app/Contents/MacOS
        cp dist/M5Logger mac_package/M5Logger.app/Contents/MacOS/M5Logger
        rm -f M5Logger.dmg
        create-dmg M5Logger.dmg mac_package/M5Logger.app

    # Package Linux AppImage
    - name: Package for Linux (.AppImage)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update && sudo apt-get install -y libfuse2
        wget https://github.com/AppImage/AppImageKit/releases/latest/download/appimagetool-x86_64.AppImage
        chmod +x appimagetool-x86_64.AppImage

        # Setup AppDir structure
        mkdir -p AppDir/usr/bin
        mkdir -p AppDir/usr/share/applications

        # Copy only your executableâ€”DO NOT copy any AppRun
        cp dist/M5Logger AppDir/usr/bin/M5Logger

        # Correct .desktop file
        cat <<EOF > AppDir/usr/share/applications/M5Logger.desktop
        [Desktop Entry]
        Type=Application
        Name=M5Logger
        Exec=M5Logger
        Icon=utilities-terminal
        Categories=Utility;
        EOF

        # Build the AppImage
        ./appimagetool-x86_64.AppImage AppDir M5Logger.AppImage

    # Windows: .exe is already built in dist/
    - name: Package for Windows (.exe)
      if: matrix.os == 'windows-latest'
      run: |
        echo "EXE already created by pyinstaller in dist/"

    # Upload the build artifacts
    - name: Upload final installers
      uses: actions/upload-artifact@v4
      with:
        name: M5Logger-${{ matrix.os }}
        path: |
          dist/M5Logger*
          M5Logger.dmg
          M5Logger.AppImage
